name: Healthcheck

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches:
      - main
      - developer

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Cache IC CDK Optimizer
        id: cache-ic-cdk-optimizer
        uses: actions/cache@v2
        with:
          path: |
            $HOME/.cargo/bin/ic-cdk-optimizer
          key: cache-ic-cdk-opt-${{ hashFiles('**/Cargo.lock') }}

      - name: Install IC CDK Optimizer
        if: steps.cache-ic-cdk-optimizer.outputs.cache-hit != 'true'
        run: |
          echo "ðŸ¤– Install IC CDK Optimizer (not cached)"
          cargo install ic-cdk-optimizer

      - name: Cache Dfx
        id: cache-dfx
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/bin/dfx
          key: cache-dfx-${{ hashFiles('dfx.json') }}

      - name: Install DFX
        if: steps.cache-dfx.outputs.cache-hit != 'true'
        env:
          DFX_VERSION: 0.8.1
        run: |
          curl -fsSL https://sdk.dfinity.org/install.sh | bash

      - name: Cache build artifacts
        id: cache-rust-target
        uses: actions/cache@v2
        with:
          path: |
            ./target
            ./cap/target
            ./dab/target
            ./DIP721/target
            ./wicp/target
          key: cache-rust-target-${{ hashFiles('package.json') }}

      - name: Healthcheck
        run: dfx start --background && npm run cap:start && npm run marketplace:healthcheck
        env:
          NODE_ENV: ci