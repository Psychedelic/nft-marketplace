name: Healthcheck

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches:
      - main
      - developer

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - uses: actions-rs/install@v0.1
        with:
          crate: ic-cdk-optimizer
          version: "0.3.4"
          use-tool-cache: true

      # - name: Env variables
      #   run: |
      #     echo "PATH=$HOME/.cargo/bin:$PATH" >> $GITHUB_ENV
      #     echo "PATH=/home/runner/.cargo/bin:$PATH" >> $GITHUB_ENV
      #     echo "PATH=/root/.cargo/bin:$PATH" >> $GITHUB_ENV
      #     echo "[debug] ⚠️ Do we have the ic-cdk-optimizer?"
      #     which ic-cdk-optimizer

      # - name: Cache Dfx
      #   id: cache-dfx
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       /usr/local/bin/dfx
      #     key: cache-dfx-${{ hashFiles('dfx.json') }}

      # - name: Install DFX
      #   if: steps.cache-dfx.outputs.cache-hit != 'true'
      #   env:
      #     DFX_VERSION: 0.8.1
      #   run: |
      #     curl -fsSL https://sdk.dfinity.org/install.sh | bash

      # - name: Cache build artifacts
      #   id: cache-rust-target
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ./target
      #       ./cap/target
      #       ./dab/target
      #       ./DIP721/target
      #       ./wicp/target
      #     key: cache-rust-target-${{ hashFiles('package.json') }}

      # - name: Healthcheck
      #   run: |
      #     dfx start --background
      #     npm run cap:start
      #     npm run marketplace:healthcheck
      #   env:
      #     NODE_ENV: ci