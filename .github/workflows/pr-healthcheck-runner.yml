name: Healthcheck

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches:
      - main
      - developer

  workflow_dispatch:

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Adds ic-cdk-optimizer
        run: |
          cd ./.bin/macos
          gzip -d ic-cdk-optimizer.gz
          cp ic-cdk-optimizer /usr/local/bin

      - name: Adds agent-rs
        run: |
          cd ./.bin/macos
          gzip -d icx.gz
          cp icx /usr/local/bin

      # - name: Cache Dfx
      #   id: cache-dfx
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       /usr/local/bin/dfx
      #     key: cache-dfx-${{ hashFiles('dfx.json') }}

      - name: Install DFX
        # if: steps.cache-dfx.outputs.cache-hit != 'true'
        env:
          DFX_VERSION: 0.8.1
        run: |
          yes Y | DFX_VERSION="$DFX_VERSION" sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Dfx identity
        run: |
          dfx identity new ci
          dfx identity use ci

      # - name: Cache build artifacts
      #   id: cache-rust-target
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ./target
      #       ./cap/target
      #       ./dab/target
      #       ./DIP721/target
      #       ./wicp/target
      #     key: cache-rust-target-${{ hashFiles('package.json') }}

      - name: Healthcheck
        run: |
          dfx start --background
          npm run cap:start
          npm run marketplace:healthcheck
        env:
          NODE_ENV: ci